generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id       String @id @default(uuid()) @db.Uuid
  nome     String @db.VarChar(150)
  email    String @unique @db.VarChar(250)
  username String @unique @db.VarChar(100)
  password String @db.Text

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime @updatedAt @map("updated_at")

  tweets Tweet[]
  likes  Like[]

  // Relacionamentos para seguidores
  seguindo   Seguidor[] @relation("Seguindo")
  seguidores Seguidor[] @relation("Seguidores")
  Reply      Reply[]

  @@map("usuarios")
}

model Tweet {
  id        String @id @default(uuid()) @db.Uuid
  descricao String

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String  @map("usuario_id") @db.Uuid

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime @updatedAt @map("updated_at")

  likes   Like[]
  replies Reply[] @relation("TweetReplies")

  @@map("tweets")
}

model Like {
  id String @id @default(uuid()) @db.Uuid

  tweet   Tweet  @relation(fields: [tweetId], references: [id])
  tweetId String @map("tweet_id") @db.Uuid

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String  @map("usuario_id") @db.Uuid

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("likes")
}

model Seguidor {
  id String @id @default(uuid()) @db.Uuid

  usuarioSeguidor   Usuario @relation("Seguindo", fields: [usuarioSeguidorId], references: [id])
  usuarioSeguidorId String  @map("usuario_seguidor_id") @db.Uuid

  usuarioSeguido   Usuario @relation("Seguidores", fields: [usuarioSeguidoId], references: [id])
  usuarioSeguidoId String  @map("usuario_seguido_id") @db.Uuid

  @@map("seguidores")
}

model Reply {
  id String @id @default(uuid()) @db.Uuid

  tweet   Tweet  @relation("TweetReplies", fields: [tweetId], references: [id])
  tweetId String @map("tweet_id") @db.Uuid

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String  @map("usuario_id") @db.Uuid

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("replies")
}
